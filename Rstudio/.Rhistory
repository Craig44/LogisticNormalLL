## Add Libraries
library(casal)
getwd()
source(make.filename(file = "../auxiliary.functions.R", path = DIR$'General functions'));
source(make.filename(file = "../Chris's_r_code.r", path = DIR$'Base'))
## Add Libraries
library(casal)
## Add other dependency funcitons
source("C:/Work/Projects/PhD/Logistic_normal/Rstudio");
getwd*()
getwd()
source(make.filename(file = "auxiliary.functions.R", path = DIR$'General functions'));
## Add other dependency funcitons
setwd("make.filename");
## Add other dependency funcitons
setwd("C:/Work/Projects/PhD/Logistic_normal/Rstudio");
source("make.filename");
source("make.filename.R");
source("auxiliary.functions.R");
DIR
Sys.info()[["user"]]
getwd()
list.files()
## Add other dependency funcitons
source("C:/Work/Projects/PhD/Logistic_normal/Rstudio");
source("Initialisation.r");
Sys.info()[["user"]]=="Dell User"
thisPath <- "C:\\Work\\Projects\\PhD\\Logistic_normal\\"
getwd()
source(paste(thisPath,"general_Funs\\assign.directories.R",sep=""))
source(paste(thisPath,"\\Rstudio\\general_Funs\\assign.directories.R",sep=""))
source(paste(thisPath,"\\Rstudio\\general_Funs\\make.filename.R",sep=""))
DIR<-assign.directories(base=thisPath)
## Add Libraries
library(casal)
## Add other dependency funcitons
source("C:/Work/Projects/PhD/Logistic_normal/Rstudio");
source("Initialisation.r");
## Add other dependency funcitons
setwd("Work/Projects/PhD/Logistic_normal/Rstudio");
getwd()
## Add other dependency funcitons
setwd("C:/Work/Projects/PhD/Logistic_normal/Rstudio");
source("Initialisation.r");
DIR
## Import example Casal file as this is
Hak  = extract.fits(path = DIR$'csl_files', file = "HAK.log");
## Import example Casal file as this is
Hak  = extract.fits(path = DIR$'csl_files', file = "HAK.log");
Hok  = extract.fits(path = DIR$'csl_files', file = "HOKI.log");
Lin  = extract.fits(path = DIR$'csl_files', file = "LIN.log");
## Run through Chris code manually with all stocks
compdat = Hak$subaTANageDEC
## restructure for Chris's Code
compdat$obs =  as.matrix(Hak$subaTANageDEC$obs)
compdat$exp =  round(as.matrix(Hak$subaTANageDEC$fits),5)
compdat$N = Hak$subaTANageDEC$error.value[,1]
sigma = 0.3
phi = c(0.2,0.3)
covmat=NULL;
sepbysex=F;
sexlag=F;
robust=F;
ARMA=F
NLLlogistnorm(compdat,sigma = 0.4,phi,covmat=NULL,sepbysex=F, sexlag=F, robust=F, ARMA=F)
source("Chris's_r_code.r")
NLLlogistnorm(compdat,sigma = 0.4,phi,covmat=NULL,sepbysex=F, sexlag=F, robust=F, ARMA=F)
NLLlogistnorm(compdat,sigma = 0.4,phi,covmat=NULL,sepbysex=F, sexlag=F, robust=F, ARMA=F)
NLLlogistnorm(compdat,sigma = 0.2,phi,covmat=NULL,sepbysex=F, sexlag=F, robust=F, ARMA=F)
NLLlogistnorm(compdat,sigma = 0.6,phi,covmat=NULL,sepbysex=F, sexlag=F, robust=F, ARMA=F)
NLLlogistnorm(compdat,sigma = 0.4,phi,covmat=NULL,sepbysex=F, sexlag=F, robust=F, ARMA=T)
NLLlogistnorm(compdat,sigma = 0.2,phi,covmat=NULL,sepbysex=F, sexlag=F, robust=F, ARMA=T)
NLLlogistnorm(compdat,sigma = 0.6,phi,covmat=NULL,sepbysex=F, sexlag=F, robust=F, ARMA=T)
## For converting R code to C++
library(Rcpp11)
compdat
NLLlogistnorm(compdat,sigma = 0.4,phi,covmat=NULL,sepbysex=F, sexlag=F, robust=F, ARMA=F)
NLLlogistnorm(compdat,sigma = 0.2,phi,covmat=NULL,sepbysex=F, sexlag=F, robust=F, ARMA=F)
NLLlogistnorm(compdat,sigma = 0.6,phi,covmat=NULL,sepbysex=F, sexlag=F, robust=F, ARMA=F)
phi = c(0.6,NA)
NLLlogistnorm(compdat,sigma = 0.4,phi,covmat=NULL,sepbysex=F, sexlag=F, robust=F, ARMA=T)
NLLlogistnorm(compdat,sigma = 0.2,phi,covmat=NULL,sepbysex=F, sexlag=F, robust=F, ARMA=T)
NLLlogistnorm(compdat,sigma = 0.6,phi,covmat=NULL,sepbysex=F, sexlag=F, robust=F, ARMA=T)
sigma = 0.3
covmat=NULL;
sepbysex=F;
sexlag=F;
robust=F;
ARMA=F
phi = c(0.6,NA)
NLLlogistnorm(compdat,sigma = 0.4,phi,covmat=NULL,sepbysex=F, sexlag=F, robust=F, ARMA=F)
NLLlogistnorm(compdat,sigma = 0.2,phi,covmat=NULL,sepbysex=F, sexlag=F, robust=F, ARMA=F)
NLLlogistnorm(compdat,sigma = 0.6,phi,covmat=NULL,sepbysex=F, sexlag=F, robust=F, ARMA=F)
phi = c(0.2,0.3)
NLLlogistnorm(compdat,sigma = 0.4,phi,covmat=NULL,sepbysex=F, sexlag=F, robust=F, ARMA=T)
NLLlogistnorm(compdat,sigma = 0.2,phi,covmat=NULL,sepbysex=F, sexlag=F, robust=F, ARMA=T)
NLLlogistnorm(compdat,sigma = 0.6,phi,covmat=NULL,sepbysex=F, sexlag=F, robust=F, ARMA=T)
sigma = 0.3
covmat=NULL;
sepbysex=F;
sexlag=F;
robust=F;
ARMA=F
phi = c(0.6,0.8)
NLLlogistnorm(compdat,sigma = 0.4,phi,covmat=NULL,sepbysex=F, sexlag=F, robust=F, ARMA=F)
NLLlogistnorm(compdat,sigma = 0.2,phi,covmat=NULL,sepbysex=F, sexlag=F, robust=F, ARMA=F)
NLLlogistnorm(compdat,sigma = 0.6,phi,covmat=NULL,sepbysex=F, sexlag=F, robust=F, ARMA=F)
phi = c(0.2,0.3)
NLLlogistnorm(compdat,sigma = 0.4,phi,covmat=NULL,sepbysex=F, sexlag=F, robust=F, ARMA=T)
NLLlogistnorm(compdat,sigma = 0.2,phi,covmat=NULL,sepbysex=F, sexlag=F, robust=F, ARMA=T)
NLLlogistnorm(compdat,sigma = 0.6,phi,covmat=NULL,sepbysex=F, sexlag=F, robust=F, ARMA=T)
covmat=NULL;
sepbysex=F;
sexlag=F;
robust=F;
ARMA=F
phi = c(0.6,0.1)
NLLlogistnorm(compdat,sigma = 0.4,phi,covmat=NULL,sepbysex=F, sexlag=F, robust=F, ARMA=F)
NLLlogistnorm(compdat,sigma = 0.2,phi,covmat=NULL,sepbysex=F, sexlag=F, robust=F, ARMA=F)
NLLlogistnorm(compdat,sigma = 0.6,phi,covmat=NULL,sepbysex=F, sexlag=F, robust=F, ARMA=F)
names(Hok)
#########
## HOKI
#########
compdat = Hok$CRsumage
compdat
compdat$obs
compdat$exp
## restructure for Chris's Code
compdat$obs =  as.matrix(Hak$subaTANageDEC$obs)
compdat$exp =  round(as.matrix(Hok$CRsumage,5))
compdat$exp =  round(as.matrix(Hok$CRsumage$fits,5))
compdat$exp
Hok$CRsumage$fits
compdat$exp =  round(as.matrix(Hok$CRsumage$fits),5)
compdat$exp
Hok$CRsumage$error.value
compdat$N = Hok$CRsumage$error.value[,1]
phi = c(0.6,0.1)
NLLlogistnorm(compdat,sigma = 0.4,phi,covmat=NULL,sepbysex=T, sexlag=F, robust=F, ARMA=F)
NLLlogistnorm(compdat,sigma = 0.2,phi,covmat=NULL,sepbysex=T, sexlag=F, robust=F, ARMA=F)
compdat
NLLlogistnorm(compdat,sigma = 0.4,phi,covmat=NULL,sepbysex=T, sexlag=T, robust=F, ARMA=F)
source("Chris_original_code.r")
#########
## HOKI
#########
compdat = Hok$CRsumage
## restructure for Chris's Code
compdat$obs =  as.matrix(Hak$subaTANageDEC$obs)
compdat$exp =  round(as.matrix(Hok$CRsumage$fits),5)
compdat$N = Hok$CRsumage$error.value[,1]
phi = c(0.6,0.1)
NLLlogistnorm(compdat,sigma = 0.4,phi,covmat=NULL,sepbysex=T, sexlag=T, robust=F, ARMA=F)
length(compdat$N)
dim(compdat$exp)
dim(compdat$obs)
## restructure for Chris's Code
compdat$obs =  as.matrix(Hok$CRsumage$obs)
compdat$exp =  round(as.matrix(Hok$CRsumage$fits),5)
compdat$N = Hok$CRsumage$error.value[,1]
phi = c(0.6,0.1)
NLLlogistnorm(compdat,sigma = 0.4,phi,covmat=NULL,sepbysex=T, sexlag=T, robust=F, ARMA=F)
NLLlogistnorm(compdat,sigma = 0.2,phi,covmat=NULL,sepbysex=T, sexlag=T, robust=F, ARMA=F)
NLLlogistnorm(compdat,sigma = 0.6,phi,covmat=NULL,sepbysex=T, sexlag=T, robust=F, ARMA=F)
phi = c(0.2,0.3)
NLLlogistnorm(compdat,sigma = 0.4,phi,covmat=NULL,sepbysex=F, sexlag=F, robust=F, ARMA=T)
NLLlogistnorm(compdat,sigma = 0.2,phi,covmat=NULL,sepbysex=F, sexlag=F, robust=F, ARMA=T)
NLLlogistnorm(compdat,sigma = 0.6,phi,covmat=NULL,sepbysex=F, sexlag=F, robust=F, ARMA=T)
NLLlogistnorm(compdat,sigma = 0.4,phi,covmat=NULL,sepbysex=F, sexlag=T, robust=F, ARMA=T)
NLLlogistnorm(compdat,sigma = 0.2,phi,covmat=NULL,sepbysex=F, sexlag=T, robust=F, ARMA=T)
NLLlogistnorm(compdat,sigma = 0.6,phi,covmat=NULL,sepbysex=F, sexlag=T, robust=F, ARMA=T)
## For converting R code to C++
library(Rcpp11)
1990:2007
length(1990:2007)
## Add Libraries
library(casal)
## Add other dependency funcitons
setwd("C:/Work/Projects/PhD/Logistic_normal/Rstudio");
source("Chris_original_code.r")
source("Initialisation.r");
## Import example Casal file as this is
Hak  = extract.fits(path = DIR$'csl_files', file = "HAK.log");
Hok  = extract.fits(path = DIR$'csl_files', file = "HOKI.log");
Lin  = extract.fits(path = DIR$'csl_files', file = "LIN.log");
#########
## HAK
#########
compdat = Hak$subaTANageDEC
## restructure for Chris's Code
compdat$obs =  as.matrix(Hak$subaTANageDEC$obs)
compdat$exp =  round(as.matrix(Hak$subaTANageDEC$fits),5)
#########
## HAK
#########
compdat = Hak$subaTANageDEC
## restructure for Chris's Code
compdat$obs =  as.matrix(Hak$subaTANageDEC$obs)
compdat$exp =  round(as.matrix(Hak$subaTANageDEC$fits),5)
compdat$N = Hak$subaTANageDEC$error.value[,1]
compdat$obs
?write.table
## save this information to text files to compare with C++ code
write.table(x = compdat$obs, file = make.filename(file = "observed.txt", path = DIR$`C++_work`),quote = FALSE, row.names = FALSE, col.names = FALSE)
## save this information to text files to compare with C++ code
write.table(x = compdat$obs, file = make.filename(file = "observed_data.txt", path = DIR$`C++_work`),quote = FALSE, row.names = FALSE, col.names = FALSE)
write.table(x = compdat$exp, file = make.filename(file = "expected_data.txt", path = DIR$`C++_work`),quote = FALSE, row.names = FALSE, col.names = FALSE)
write.table(x = compdat$N, file = make.filename(file = "error_data.txt", path = DIR$`C++_work`),quote = FALSE, row.names = FALSE, col.names = FALSE)
dim(compdat$obs)
mat1 = matrix(c(1,2,3,4),2,2)
mat1
mat1 = matrix(c(1,2,3,4),2,2, byrow = T)
mat1
mat1 %*% mat1
mat1 * mat1
obsmat <- compdat$obs
if(!is.matrix(obsmat))obsmat <- matrix(obsmat,nrow=1,
dimnames=list(NULL,names(obsmat)))
Nbin <- ncol(obsmat)
Nyear <- nrow(obsmat)
if(is.in('N',names(compdat))){
if(length(compdat$N)!=Nyear)stop('Wrong length for compdat$N')
wts <- sqrt(mean(compdat$N)/compdat$N)
} else wts <- rep(1,Nyear)
if(length(wts)==1)wts <- rep(1,Nyear)
expmat <- compdat$exp
if(!is.matrix(expmat)){
if(length(expmat)!=Nbin)stop('Wrong size for compdat$exp')
expmat <- matrix(rep(expmat,Nyear),Nyear,byrow=T,
dimnames=list(NULL,names(expmat)))
} else if(!all(dim(expmat)==dim(obsmat)))stop('Wrong size for compdat$exp')
if(is.null(covmat))
covmat <- covmat.logistnorm(sigma,phi,colnames(obsmat),sepbysex,sexlag,
ARMA)
Kmat <- cbind(diag(Nbin-1),-1)
Vmat <- Kmat %*% (covmat %*% t(Kmat))
Vmat
dim(Vinv)
Vinv <- solve(Vmat)
dim(Vinv)
negloglik <- 0.5*Nyear*(Nbin-1)*log(2*pi)+sum(log(obsmat))+
0.5*Nyear*log(det(Vmat))
if(!all(wts==1))
negloglik <- negloglik + (Nbin-1)*sum(log(wts))
ww <- log(sweep(obsmat[,-Nbin,drop=F],1,obsmat[,Nbin],'/'))- log(sweep(expmat[,-Nbin,drop=F],1,expmat[,Nbin],'/'))
Vinvdiag <- diag(Vinv)
for(i in 1:Nyear){
if(robust){
## original proposed robustification
#            uu <- ww[i,] %*% Vinv
#            negloglik <- negloglik-(0.5/(wts[i]^2))*
#                sum(log(exp(-uu*ww[i,])+0.01))
## modified robustification
tmp <- (ww[i,]^2)*Vinvdiag
negloglik <- negloglik+(0.5/(wts[i]^2))*
((ww[i,] %*% Vinv) %*% ww[i,] - sum(tmp) -
sum(log(exp(-tmp)+0.01)))
}
else negloglik <- negloglik+(0.5/(wts[i]^2))*
(ww[i,] %*% Vinv) %*% ww[i,]
}
negloglik
ww
dim(Vinv)
dim(ww)
log(sweep(obsmat[,-Nbin,drop=F],1,obsmat[,Nbin],'/'))
dim(log(sweep(obsmat[,-Nbin,drop=F],1,obsmat[,Nbin],'/')))
dim(obsmat)
head(obsmat)
dim(ww)
dim(Vmat)
dim(covmat)
dim(Kmat)
dim(Vmat)
i = 1
ww[i,]
dim(ww[i,])
dim((ww[i,] %*% Vinv))
dim((ww[i,] %*% Vinv) %*% ww[i,])
ww[i,]
length(ww[i,])
s script is setting up the logistic normal likelihood for composition data
## Add Libraries
library(casal)
## Add other dependency funcitons
setwd("C:/Work/Projects/PhD/Logistic_normal/Rstudio");
source("Chris_original_code.r")
source("Initialisation.r");
## Import example Casal file as this is
Hak  = extract.fits(path = DIR$'csl_files', file = "HAK.log");
Hok  = extract.fits(path = DIR$'csl_files', file = "HOKI.log");
Lin  = extract.fits(path = DIR$'csl_files', file = "LIN.log");
## Run through Chris code manually with all stocks
#########
## HAK
#########
compdat = Hak$subaTANageDEC
## restructure for Chris's Code
compdat$obs =  as.matrix(Hak$subaTANageDEC$obs)
compdat$exp =  round(as.matrix(Hak$subaTANageDEC$fits),5)
compdat$N = Hak$subaTANageDEC$error.value[,1]
# save this information to text files to compare with C++ code
write.table(x = compdat$obs, file = make.filename(file = "observed_data.txt", path = DIR$`C++_work`),quote = FALSE, row.names = FALSE, col.names = FALSE)
write.table(x = compdat$exp, file = make.filename(file = "expected_data.txt", path = DIR$`C++_work`),quote = FALSE, row.names = FALSE, col.names = FALSE)
write.table(x = compdat$N, file = make.filename(file = "error_data.txt", path = DIR$`C++_work`),quote = FALSE, row.names = FALSE, col.names = FALSE)
sigma = 0.4
covmat=NULL;
sepbysex=F;
sexlag=F;
robust=F;
ARMA=F
phi = c(0.4)
NLLlogistnorm(compdat,sigma = 0.4,phi,covmat=NULL,sepbysex=F, sexlag=F, robust=F, ARMA=F)
phi
### Initial debugging
covar = read.table(make.filename(file = "covariance.txt", path = DIR$`C++_work`), header = F)
dim(covar)
obsmat <- compdat$obs
if(!is.matrix(obsmat))obsmat <- matrix(obsmat,nrow=1,
dimnames=list(NULL,names(obsmat)))
Nbin <- ncol(obsmat)
Nyear <- nrow(obsmat)
if(is.in('N',names(compdat))){
if(length(compdat$N)!=Nyear)stop('Wrong length for compdat$N')
wts <- sqrt(mean(compdat$N)/compdat$N)
} else wts <- rep(1,Nyear)
if(length(wts)==1)wts <- rep(1,Nyear)
expmat <- compdat$exp
if(!is.matrix(expmat)){
if(length(expmat)!=Nbin)stop('Wrong size for compdat$exp')
expmat <- matrix(rep(expmat,Nyear),Nyear,byrow=T,
dimnames=list(NULL,names(expmat)))
} else if(!all(dim(expmat)==dim(obsmat)))stop('Wrong size for compdat$exp')
if(is.null(covmat))
covmat <- covmat.logistnorm(sigma,phi,colnames(obsmat),sepbysex,sexlag,
ARMA)
covmat
sigma
phi
sepbysex
sexlag
ARMA
covar - covmat
covar
covmat
sigma = 0.9
covmat=NULL;
sepbysex=F;
sexlag=F;
robust=F;
ARMA=F
phi = c(0.4)
NLLlogistnorm(compdat,sigma = 0.4,phi,covmat=NULL,sepbysex=F, sexlag=F, robust=F, ARMA=F)
### Initial debugging
covar = read.table(make.filename(file = "covariance.txt", path = DIR$`C++_work`), header = F)
covmat <- covmat.logistnorm(sigma,phi,colnames(obsmat),sepbysex,sexlag, ARMA)
covar - covmat
lower.tri(covar - covmat)
covar - covmat[lower.tri(covar - covmat)]
diff(covmat, )4.860000e-014.860000e-01
4.860000e-01
round(diag(covar),2)
covar
diag(covar)
class(diag)
class(covar)
### Initial debugging
covar = as.matrix(read.table(make.filename(file = "covariance.txt", path = DIR$`C++_work`), header = F))
covar
covmat <- covmat.logistnorm(sigma,phi,colnames(obsmat),sepbysex,sexlag, ARMA)
covar - covmat[lower.tri(covar - covmat)]
dim(covar)
dim(covmat)
diag(covar)
diag(covmat)
covar[1,]
covar[19,]
covmat[19,]
